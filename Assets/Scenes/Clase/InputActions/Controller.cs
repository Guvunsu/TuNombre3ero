//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Scenes/Clase/InputActions/Controller.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controller : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controller()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controller"",
    ""maps"": [
        {
            ""name"": ""CoreMechanics"",
            ""id"": ""4a68ff0a-b22a-4f1e-a4a3-f902494a0b37"",
            ""actions"": [
                {
                    ""name"": ""MOVE"",
                    ""type"": ""Value"",
                    ""id"": ""2f447916-c8c4-42ae-b5c9-82624ae2322b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ATTACK"",
                    ""type"": ""Button"",
                    ""id"": ""245a667b-0be6-4ac9-b95f-40552e4f3dee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DASH"",
                    ""type"": ""Button"",
                    ""id"": ""16ad4984-1289-48d6-a436-57e92e52b6db"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SPRINT"",
                    ""type"": ""Button"",
                    ""id"": ""4e79c5b0-7cea-4eda-a810-9e1795e41609"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6497cd56-2fdb-4ca5-8ddb-6c9a757a7ba2"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MOVE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""98ba7e47-834b-4377-9e65-f65d34197bbf"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MOVE"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""41594f8d-3994-4f7f-ba90-58afd9d0c782"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MOVE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ce87b39c-e3ac-441c-8b05-8c67b700214a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MOVE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""afb8373c-77da-4de4-aa8b-7976b1a5489b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MOVE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a91b96e2-e026-4ea9-9f40-3490a76c226c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MOVE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""d111ed4e-c612-4252-be68-a20f7efe1a77"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MOVE"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""a9e435c8-fa3c-4333-af21-bc8a1e7fcd90"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MOVE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""70d3e80f-98e7-4c3a-bdb3-db2a7f813bc1"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MOVE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8adfa4cd-0236-495b-a48a-7155904d8192"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MOVE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d29bf31e-7fb0-41a1-a2c2-24216c3cdbb1"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MOVE"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""65c1f934-39a8-4fb6-ad6c-6dd3fa8c8d34"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ATTACK"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d8065b55-61e7-4c83-b7a7-87c555a83a16"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ATTACK"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75c920a7-4e36-441f-80f8-55cd3c184353"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ATTACK"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ae695e4-3bf9-4c00-8fbf-e619bf7ee6a6"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DASH"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ea0e2d75-5f9c-42fc-ba99-972ab9e77c25"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SPRINT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // CoreMechanics
        m_CoreMechanics = asset.FindActionMap("CoreMechanics", throwIfNotFound: true);
        m_CoreMechanics_MOVE = m_CoreMechanics.FindAction("MOVE", throwIfNotFound: true);
        m_CoreMechanics_ATTACK = m_CoreMechanics.FindAction("ATTACK", throwIfNotFound: true);
        m_CoreMechanics_DASH = m_CoreMechanics.FindAction("DASH", throwIfNotFound: true);
        m_CoreMechanics_SPRINT = m_CoreMechanics.FindAction("SPRINT", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // CoreMechanics
    private readonly InputActionMap m_CoreMechanics;
    private ICoreMechanicsActions m_CoreMechanicsActionsCallbackInterface;
    private readonly InputAction m_CoreMechanics_MOVE;
    private readonly InputAction m_CoreMechanics_ATTACK;
    private readonly InputAction m_CoreMechanics_DASH;
    private readonly InputAction m_CoreMechanics_SPRINT;
    public struct CoreMechanicsActions
    {
        private @Controller m_Wrapper;
        public CoreMechanicsActions(@Controller wrapper) { m_Wrapper = wrapper; }
        public InputAction @MOVE => m_Wrapper.m_CoreMechanics_MOVE;
        public InputAction @ATTACK => m_Wrapper.m_CoreMechanics_ATTACK;
        public InputAction @DASH => m_Wrapper.m_CoreMechanics_DASH;
        public InputAction @SPRINT => m_Wrapper.m_CoreMechanics_SPRINT;
        public InputActionMap Get() { return m_Wrapper.m_CoreMechanics; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CoreMechanicsActions set) { return set.Get(); }
        public void SetCallbacks(ICoreMechanicsActions instance)
        {
            if (m_Wrapper.m_CoreMechanicsActionsCallbackInterface != null)
            {
                @MOVE.started -= m_Wrapper.m_CoreMechanicsActionsCallbackInterface.OnMOVE;
                @MOVE.performed -= m_Wrapper.m_CoreMechanicsActionsCallbackInterface.OnMOVE;
                @MOVE.canceled -= m_Wrapper.m_CoreMechanicsActionsCallbackInterface.OnMOVE;
                @ATTACK.started -= m_Wrapper.m_CoreMechanicsActionsCallbackInterface.OnATTACK;
                @ATTACK.performed -= m_Wrapper.m_CoreMechanicsActionsCallbackInterface.OnATTACK;
                @ATTACK.canceled -= m_Wrapper.m_CoreMechanicsActionsCallbackInterface.OnATTACK;
                @DASH.started -= m_Wrapper.m_CoreMechanicsActionsCallbackInterface.OnDASH;
                @DASH.performed -= m_Wrapper.m_CoreMechanicsActionsCallbackInterface.OnDASH;
                @DASH.canceled -= m_Wrapper.m_CoreMechanicsActionsCallbackInterface.OnDASH;
                @SPRINT.started -= m_Wrapper.m_CoreMechanicsActionsCallbackInterface.OnSPRINT;
                @SPRINT.performed -= m_Wrapper.m_CoreMechanicsActionsCallbackInterface.OnSPRINT;
                @SPRINT.canceled -= m_Wrapper.m_CoreMechanicsActionsCallbackInterface.OnSPRINT;
            }
            m_Wrapper.m_CoreMechanicsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MOVE.started += instance.OnMOVE;
                @MOVE.performed += instance.OnMOVE;
                @MOVE.canceled += instance.OnMOVE;
                @ATTACK.started += instance.OnATTACK;
                @ATTACK.performed += instance.OnATTACK;
                @ATTACK.canceled += instance.OnATTACK;
                @DASH.started += instance.OnDASH;
                @DASH.performed += instance.OnDASH;
                @DASH.canceled += instance.OnDASH;
                @SPRINT.started += instance.OnSPRINT;
                @SPRINT.performed += instance.OnSPRINT;
                @SPRINT.canceled += instance.OnSPRINT;
            }
        }
    }
    public CoreMechanicsActions @CoreMechanics => new CoreMechanicsActions(this);
    public interface ICoreMechanicsActions
    {
        void OnMOVE(InputAction.CallbackContext context);
        void OnATTACK(InputAction.CallbackContext context);
        void OnDASH(InputAction.CallbackContext context);
        void OnSPRINT(InputAction.CallbackContext context);
    }
}
